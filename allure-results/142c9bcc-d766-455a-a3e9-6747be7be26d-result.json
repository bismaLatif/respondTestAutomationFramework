{"name": "test_get_user", "status": "failed", "statusDetails": {"message": "AssertionError: Token should be present in the login response\nassert None is not None", "trace": "api_client = <api.api_client.APIClient object at 0x000002043575C9B0>\nlogin_data = {'dashboard_url': 'https://app.respond.io/space/241150/dashboard', 'invalid_email': 'bismarespond.io@yopmail.com', 'login_url': 'https://app.respond.io/user/login', 'valid_email': 'bidmarespond.io@yopmail.com', ...}\n\n    @allure.feature(\"API Feature\")\n    def test_get_user(api_client, login_data):\n        # Perform the login to get the token\n        login_response = api_client.login(login_data[\"valid_email\"], login_data[\"valid_password\"])\n        assert login_response.status_code == 200\n    \n        # Extract the token from the login response\n        response_json = login_response.json()\n        token = response_json.get('token')  # Adjust this key based on the actual response structure\n    \n>       assert token is not None, \"Token should be present in the login response\"\nE       AssertionError: Token should be present in the login response\nE       assert None is not None\n\ntests\\test_api.py:13: AssertionError"}, "start": 1722719402581, "stop": 1722719403364, "uuid": "1294e5fa-3aa3-400a-8288-34dfcb359a43", "historyId": "4a50f1871faa930645ada9579db37bad", "testCaseId": "4a50f1871faa930645ada9579db37bad", "fullName": "tests.test_api#test_get_user", "labels": [{"name": "feature", "value": "API Feature"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-1RESUV2"}, {"name": "thread", "value": "22752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}